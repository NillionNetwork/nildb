components:
  schemas:
    SchemaMetadata:
      type: object
      required:
        - id
        - count
        - size
        - firstWrite
        - lastWrite
        - indexes
      properties:
        id:
          $ref: './base.openapi.yaml#/components/schemas/UUID'
        count:
          type: integer
          description: An estimate of the collection's size
        size:
          type: integer
          description: The schema data's size in bytes
        firstWrite:
          type: string
          format: date-time
          description: Date-time of the first document write
        lastWrite:
          type: string
          format: date-time
          description: Date-time of the most recent document write
        indexes:
          type: array
          items:
            $ref: '#/components/schemas/CollectionIndex'
    CollectionIndex:
      type: object
      required:
        - v
        - key
        - name
        - unique
      properties:
        v:
          type: integer
          description: Index version
        key:
          type: object
          description: A map of the index's key(s) names and their direction (1 asc or -1 desc).
        name:
          description: The index name
          type: string
        unique:
          type: boolean
    IndexDefinition:
      type: object
      required:
        - name
        - keys
        - unique
      properties:
        name:
          type: string
          minLength: 4
          description: Name of the index
        keys:
          type: array
          items:
            type: object
            minProperties: 1
            maxProperties: 1
            additionalProperties:
              type: integer
              enum: [ 1, -1 ]
          description: Array of index key definitions. Each object must have exactly one key
          example: [ { "_id": 1 }, { "timestamp": -1 } ]
        unique:
          type: boolean
          description: Whether the index enforces unique values
        ttl:
          type: integer
          description: Optional TTL in seconds for document expiration

paths:
  /api/beta/schemas/{id}/meta:
    get:
      summary: Retrieve schema metadata
      description: Retrieve schema metadata
      tags:
        - Beta
      security:
        - jwt: [ ]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            $ref: './base.openapi.yaml#/components/schemas/UUID'
          description: Schema ID
      responses:
        '200':
          description: Schema metadata
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/SchemaMetadata'
        '400':
          $ref: './base.openapi.yaml#/components/responses/400'
        '401':
          $ref: './base.openapi.yaml#/components/responses/401'
        '500':
          $ref: './base.openapi.yaml#/components/responses/500'
  /api/beta/schemas/{id}/indexes:
    post:
      summary: Create a new index
      description: Create a new index on the specified schema
      tags:
        - Beta
      security:
        - jwt: [ ]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            $ref: './base.openapi.yaml#/components/schemas/UUID'
          description: Schema ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IndexDefinition'
      responses:
        '201':
          $ref: './base.openapi.yaml#/components/responses/201'
        '400':
          $ref: './base.openapi.yaml#/components/responses/400'
        '401':
          $ref: './base.openapi.yaml#/components/responses/401'
        '500':
          $ref: './base.openapi.yaml#/components/responses/500'
  /api/beta/schemas/{id}/indexes/{name}:
    delete:
      summary: Drop an index
      description: Remove an index from the specified schema
      tags:
        - Beta
      security:
        - jwt: [ ]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            $ref: './base.openapi.yaml#/components/schemas/UUID'
          description: Schema ID
        - in: path
          name: name
          required: true
          schema:
            type: string
          description: Name of the index to drop
      responses:
        204:
          $ref: './base.openapi.yaml#/components/responses/204'
        '400':
          $ref: './base.openapi.yaml#/components/responses/400'
        '401':
          $ref: './base.openapi.yaml#/components/responses/401'
        '500':
          $ref: './base.openapi.yaml#/components/responses/500'
